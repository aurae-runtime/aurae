/* -------------------------------------------------------------------------- *\
 *        Apache 2.0 License Copyright © 2022-2023 The Aurae Authors          *
 *                                                                            *
 *                +--------------------------------------------+              *
 *                |   █████╗ ██╗   ██╗██████╗  █████╗ ███████╗ |              *
 *                |  ██╔══██╗██║   ██║██╔══██╗██╔══██╗██╔════╝ |              *
 *                |  ███████║██║   ██║██████╔╝███████║█████╗   |              *
 *                |  ██╔══██║██║   ██║██╔══██╗██╔══██║██╔══╝   |              *
 *                |  ██║  ██║╚██████╔╝██║  ██║██║  ██║███████╗ |              *
 *                |  ╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝ |              *
 *                +--------------------------------------------+              *
 *                                                                            *
 *                         Distributed Systems Runtime                        *
 *                                                                            *
 * -------------------------------------------------------------------------- *
 *                                                                            *
 *   Licensed under the Apache License, Version 2.0 (the "License");          *
 *   you may not use this file except in compliance with the License.         *
 *   You may obtain a copy of the License at                                  *
 *                                                                            *
 *       http://www.apache.org/licenses/LICENSE-2.0                           *
 *                                                                            *
 *   Unless required by applicable law or agreed to in writing, software      *
 *   distributed under the License is distributed on an "AS IS" BASIS,        *
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *
 *   See the License for the specific language governing permissions and      *
 *   limitations under the License.                                           *
 *                                                                            *
\* -------------------------------------------------------------------------- */

syntax = "proto3";

package aurae.observe.v0;

option go_package = "github.com/aurae-runtime/ae/client/pkg/api/v0/observe;observev0";

enum LogChannelType {
  LOG_CHANNEL_TYPE_UNSPECIFIED = 0;
  LOG_CHANNEL_TYPE_STDOUT = 1;
  LOG_CHANNEL_TYPE_STDERR = 2;
}

service ObserveService {

  // request log stream for aurae. everything logged via log macros in aurae (info!, error!, trace!, ... ).
  rpc GetAuraeDaemonLogStream(GetAuraeDaemonLogStreamRequest) returns (stream GetAuraeDaemonLogStreamResponse) {}

  // TODO: request log stream for a sub process
  rpc GetSubProcessStream(GetSubProcessStreamRequest) returns (stream GetSubProcessStreamResponse) {}

  // request POSIX signals stream for the host
  rpc GetPosixSignalsStream(GetPosixSignalsStreamRequest) returns (stream GetPosixSignalsStreamResponse) {}
}

/// Request a stream of POSIX signals
message GetPosixSignalsStreamRequest {
  /// The workload to which te response will be scoped. If no workload is
  /// specified, a stream of all POSIX signals on the host will be returned.
  Workload workload = 1;
}

enum WorkloadType {
  WORKLOAD_TYPE_UNSPECIFIED = 0;
  WORKLOAD_TYPE_CELL = 1;
  WORKLOAD_TYPE_POD_SANDBOX = 2;
  WORKLOAD_TYPE_VM = 3;
}

message Workload {
  WorkloadType workload_type = 1;
  string id = 2;
}

message GetPosixSignalsStreamResponse {
  Signal signal = 1;
}

message Signal {
  int32 signal = 1;
  int32 process_id = 2;
}

message GetAuraeDaemonLogStreamRequest {
}

// TODO: not implemented
message GetSubProcessStreamRequest {
  LogChannelType channel_type = 1;
  int32 process_id = 2;
}

message LogItem {
  string channel = 1;
  string line = 2;
  int64 timestamp = 3;
}

message GetAuraeDaemonLogStreamResponse {
  LogItem item = 1;
}

message GetSubProcessStreamResponse {
  LogItem item = 1;
}

