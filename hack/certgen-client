#!/usr/bin/env bash
# ---------------------------------------------------------------------------- #
#                |   █████╗ ██╗   ██╗██████╗  █████╗ ███████╗ |                #
#                |  ██╔══██╗██║   ██║██╔══██╗██╔══██╗██╔════╝ |                #
#                |  ███████║██║   ██║██████╔╝███████║█████╗   |                #
#                |  ██╔══██║██║   ██║██╔══██╗██╔══██║██╔══╝   |                #
#                |  ██║  ██║╚██████╔╝██║  ██║██║  ██║███████╗ |                #
#                |  ╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝ |                #
#                +--------------------------------------------+                #
#                                                                              #
#                         Distributed Systems Runtime                          #
# ---------------------------------------------------------------------------- #
# Copyright 2022 - 2024, the aurae contributors                                #
# SPDX-License-Identifier: Apache-2.0                                          #
# ---------------------------------------------------------------------------- #

set -e
# certgen-client assumes certgen has been ran

if [ -z "$1" ]; then
    echo "Usage: ./hack/certgen-client <name>"
    exit 1
fi
NAME=$1
echo " -> Generating Client: ${NAME}..."

## Generate client CSR
echo " -> Generating Client Material: client.${NAME}.key, client.${NAME}.csr..."
openssl genrsa -out "./pki/client.${NAME}.key" 4096 2>/dev/null
openssl req \
  -new \
  -addext  "subjectAltName = DNS:${NAME}.unsafe.aurae.io" \
  -subj    "/C=IS/ST=aurae/L=aurae/O=Aurae/OU=Runtime/CN=${NAME}.unsafe.aurae.io" \
  -key     "./pki/client.${NAME}.key" \
  -out     "./pki/client.${NAME}.csr" 2>/dev/null

## Sign the client cert using the CA
echo " -> Signing Client Material (Root CA): client.${NAME}.csr..."
openssl x509 \
  -req \
  -extfile "./hack/certgen.client.ext" \
  -days   9999 \
  -in     "./pki/client.${NAME}.csr" \
  -CA     "./pki/ca.crt" \
  -CAkey  "./pki/ca.key" \
  -CAcreateserial \
  -out "./pki/_signed.client.${NAME}.crt" 2>/dev/null

## Verify the client material is signed
echo " -> Verify Client Material (Root CA): client.${NAME}.csr..."
openssl verify -CAfile "./pki/ca.crt" "./pki/_signed.client.${NAME}.crt" 1>/dev/null && echo " -> Root Verification: Success!"
